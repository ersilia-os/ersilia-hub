
{{ $existingInstance := (lookup "apps/v1" "Deployment" .Release.Namespace (cat .Values.application.name "-frontend")) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.name }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Values.application.name }}
    app.kubernetes.io/name: {{ .Values.application.name }}-frontend
spec:
  {{- if and $existingInstance $existingInstance.spec }}
  replicas: {{ $existingInstance.spec.replicas }}
  {{- else }}
  replicas: {{ .Values.frontend.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Values.application.name }}
      app.kubernetes.io/name: {{ .Values.application.name }}-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  minReadySeconds: 60
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Values.application.name }}
        app.kubernetes.io/name: {{ .Values.application.name }}-frontend
    spec:
      containers:
        - name: frontend
          image: ersiliaos/ersilia-hub-ui:{{ .Values.frontend.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: 
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 200m
              memory: 400Mi
          livenessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            initialDelaySeconds: 15
            timeoutSeconds: 20
            periodSeconds: 15
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          # TODO: volume mounts
          # TODO: security context
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      securityContext: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: ersilia.workload
                operator: In
                values: 
                  - core
      tolerations:
        - effect: NoSchedule
          key: ersilia.workload
          operator: Equal
          value: core
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.application.name }}-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Values.application.name }}
    app.kubernetes.io/name: {{ .Values.application.name }}-frontend
spec:
  ports:
    - protocol: TCP
      name: http
      port: 8080
      targetPort: 8080
  selector:
    app.kubernetes.io/instance: {{ .Values.application.name }}
    app.kubernetes.io/name: {{ .Values.application.name }}-frontend
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster