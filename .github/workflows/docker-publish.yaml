name: Docker Publish

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      version:
        required: true
        type: string
      working_directory:
        required: true
        type: string
      build_frontend:
        required: false
        type: boolean
        default: false

env:
  DOCKER_REGISTRY: 'ersiliaos'

jobs:
  build:
    name: 'Build and Publish Server'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        if: ${{ inputs.build_frontend == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'

      - name: Install Packages
        if: ${{ inputs.build_frontend == 'true' }}
        working-directory: ${{ inputs.working_directory }}
        run: npm ci

      - name: Build Frontend
        if: ${{ inputs.build_frontend == 'true' }}
        working-directory: ${{ inputs.working_directory }}
        run: npm run build

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Generate Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ inputs.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=ref,semver,pattern={{version}}
            type=ref,semver,pattern={{major}}.{{minor}}
            type=ref,semver,pattern={{major}}
            type=sha
            type=raw,value=${{ inputs.image }}

      - name: Build and push docker image
        id: docker_publish
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.working_directory }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ inputs.image }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ inputs.image }}:buildcache,mode=ma

      - name: Output image info
        id: output_image_info
        env:
          DOCKER_METADATA: ${{ steps.docker_meta.outputs.json }}
        run: |
          echo $DOCKER_METADATA | jq '.'